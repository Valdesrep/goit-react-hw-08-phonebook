{"version":3,"file":"static/js/939.2300deaf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","views/contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useGetAllContactsQuery } from 'redux/contactApi';\nimport { useCreateContactMutation } from 'redux/contactApi';\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetAllContactsQuery();\n\n  const isInContacts = contacts?.some(\n    contact => contact.name.toLowerCase() === name.toLowerCase()\n  );\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    isInContacts\n      ? alert(`${name} is already in contacts`)\n      : createContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const onInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={onFormSubmit}>\n      <h2>Phonebook</h2>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={onInputChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={onInputChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"title\":\"ContactList_title__gpugJ\",\"delete\":\"ContactList_delete__dvPUy\",\"item\":\"ContactList_item__EZYHO\"};","import { useSelector } from 'react-redux';\nimport s from './ContactList.module.css';\nimport Notiflix from 'notiflix';\nimport {\n  useGetAllContactsQuery,\n  useDeleteContactsMutation,\n} from 'redux/contactApi';\n\nconst ContactList = () => {\n  const { data, error, isError, isFetching } = useGetAllContactsQuery();\n\n  const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n  const getFilterContacts = (contacts, filter) => {\n    const normalizedFilterValue = filter.toLowerCase().trim();\n\n    const filtredContacts = contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilterValue)\n    );\n    return filtredContacts;\n  };\n\n  const contacts = useSelector(state => getFilterContacts(data, state.filter));\n  return (\n    <div className={s.wrapper}>\n      <h2 className={s.title}>Contacts</h2>\n      {isError && Notiflix.Notify.failure({ error })}\n      {isFetching && Notiflix.Loading.circle('Please wait ...')}\n      {!isFetching && Notiflix.Loading.remove()}\n      {contacts && (\n        <ul className={s.list}>\n          {contacts.map(({ id, name, number }) => {\n            return (\n              <li className={s.item} key={id}>\n                <span>\n                  {name}: {number}\n                </span>\n                <button\n                  className={s.delete}\n                  type=\"button\"\n                  onClick={() => deleteContact(id)}\n                  disabled={isLoading}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactFilter_label__qRVzC\",\"input\":\"ContactFilter_input__8mWOi\",\"form\":\"ContactFilter_form__RBCmO\"};","import s from './ContactFilter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/action';\n\nconst ContactFilter = () => {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.form}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default ContactFilter;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport ContactFilter from '../components/ContactFilter/ContactFilter';\n\nexport default function PhoneBook() {\n  return (\n    <>\n      <ContactForm></ContactForm>\n      <ContactFilter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["useState","name","setName","number","setNumber","useCreateContactMutation","createContact","contacts","useGetAllContactsQuery","data","isInContacts","some","contact","toLowerCase","onInputChange","event","currentTarget","value","className","s","onSubmit","preventDefault","alert","type","pattern","title","required","onChange","error","isError","isFetching","useDeleteContactsMutation","deleteContact","isLoading","useSelector","state","filter","normalizedFilterValue","trim","includes","getFilterContacts","Notiflix","map","id","onClick","disabled","dispatch","useDispatch","e","changeFilter","target","PhoneBook"],"sourceRoot":""}